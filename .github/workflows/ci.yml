name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate HTML and Assets
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate HTML
      uses: Cyb3r-Jak3/html5validator-action@v7.2.0
      with:
        root: .
        css: true
        also-check-css: true

    - name: Check for broken links in HTML
      run: |
        # Check if all referenced assets exist
        echo "Checking for missing assets..."
        
        # Check CSS file exists
        if [ ! -f "style.css" ]; then
          echo "‚ùå style.css not found"
          exit 1
        fi
        
        # Check JS file exists
        if [ ! -f "script.js" ]; then
          echo "‚ùå script.js not found"
          exit 1
        fi
        
        # Check PDF exists
        if [ ! -f "assets/nahuel-santos-cv.pdf" ]; then
          echo "‚ùå CV PDF not found"
          exit 1
        fi
        
        # Check main HTML file exists
        if [ ! -f "index.html" ]; then
          echo "‚ùå index.html not found"
          exit 1
        fi
        
        echo "‚úÖ All required files found"

    - name: Validate internal and external links
      run: |
        echo "üîç Validating links in HTML files..."
        
        # Install htmlq for HTML parsing
        curl -L https://github.com/mgdm/htmlq/releases/download/v0.4.0/htmlq-x86_64-linux.tar.gz | tar xz
        chmod +x htmlq
        
        # Function to check if URL is reachable
        check_url() {
          local url="$1"
          local status_code=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 --retry 2 "$url")
          if [[ "$status_code" =~ ^[23] ]]; then
            echo "‚úÖ $url (HTTP $status_code)"
            return 0
          else
            echo "‚ùå $url (HTTP $status_code)"
            return 1
          fi
        }
        
        # Extract all links from HTML
        echo "Extracting links from index.html..."
        
        # Get all href attributes
        all_links=$(./htmlq --attribute href 'a[href]' < index.html | sort -u)
        
        # Get all src attributes for assets
        all_assets=$(./htmlq --attribute src 'img[src], script[src], link[href]' < index.html | sort -u)
        
        failed_links=0
        total_external=0
        total_internal=0
        total_assets=0
        
        echo ""
        echo "üìã Checking internal anchor links..."
        
        # Check internal anchor links
        for link in $all_links; do
          if [[ "$link" =~ ^#.+ ]]; then
            total_internal=$((total_internal + 1))
            anchor_id="${link#\#}"
            
            # Check if the anchor exists in the HTML
            if ./htmlq "#$anchor_id" < index.html > /dev/null 2>&1; then
              echo "‚úÖ Internal anchor: $link"
            else
              echo "‚ùå Internal anchor not found: $link"
              failed_links=$((failed_links + 1))
            fi
          fi
        done
        
        echo ""
        echo "üìã Checking asset files..."
        
        # Check local asset files
        for asset in $all_assets; do
          if [[ ! "$asset" =~ ^https?:// ]] && [[ ! "$asset" =~ ^// ]]; then
            total_assets=$((total_assets + 1))
            
            if [ -f "$asset" ]; then
              echo "‚úÖ Asset exists: $asset"
            else
              echo "‚ùå Asset missing: $asset"
              failed_links=$((failed_links + 1))
            fi
          fi
        done
        
        echo ""
        echo "üåê Checking external links..."
        
        # Check external links
        for link in $all_links; do
          if [[ "$link" =~ ^https?:// ]]; then
            total_external=$((total_external + 1))
            
            if check_url "$link"; then
              :  # Success message already printed
            else
              failed_links=$((failed_links + 1))
            fi
          fi
        done
        
        echo ""
        echo "üìä Link validation summary:"
        echo "- Internal anchors checked: $total_internal"
        echo "- Local assets checked: $total_assets"
        echo "- External URLs checked: $total_external"
        echo "- Failed links: $failed_links"
        
        if [ $failed_links -gt 0 ]; then
          echo ""
          echo "‚ùå Link validation failed! Found $failed_links broken link(s)."
          exit 1
        else
          echo ""
          echo "‚úÖ All links are valid!"
        fi

    - name: Check CSS syntax
      run: |
        # Basic CSS syntax check using Node.js CSS parser
        npx css-tree-validate style.css || {
          echo "‚ùå CSS syntax errors found"
          exit 1
        }
        echo "‚úÖ CSS syntax is valid"

    - name: Check JavaScript syntax
      run: |
        # Basic JS syntax check
        node -c script.js || {
          echo "‚ùå JavaScript syntax errors found"
          exit 1
        }
        echo "‚úÖ JavaScript syntax is valid"

    - name: Validate manifest.json
      run: |
        # Validate JSON syntax
        python3 -m json.tool manifest.json > /dev/null || {
          echo "‚ùå manifest.json is invalid"
          exit 1
        }
        echo "‚úÖ manifest.json is valid" 